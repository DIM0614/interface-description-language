package interfaces;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;

/**
 * Represents a Marshaller, which is used for
 * generating (marshalling) and interpreting (unmarshalling)
 * byte stream representations of objects to be transmitted
 * over the network, optionally converting them to a structured
 * marshalling format beforehand (e.g. XML, CDR, etc).
 * 
 * @author carlosemv
 */
public interface Marshaller {
	/**
	 * Generates byte stream that represents object.
	 * 
	 * @param object 	the object to be marshalled
	 * @return 	byte stream representation of object
	 */
	public ByteArrayOutputStream marshal(Object object) throws IOException;
	
	/**
	 * Interprets byte stream generated by an instance
	 * of the same Marshaller implementation into its
	 * corresponding object.
	 * 
	 * @param inputStream	marshalled object as byte stream
	 * @param tgtClass	class of object to be unmarshalled
	 * @return 	object represented by inputStream
	 */
	public <T> Object unmarshal(ByteArrayInputStream inputStream, Class<T> tgtClass) throws IOException, ClassNotFoundException;
}
